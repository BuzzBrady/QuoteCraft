/* src/pages/ProfileSettingsPage.module.css */
.settingsContainer {
    max-width: 600px;
    margin: var(--space-xl) auto;
    padding: var(--space-xl);
    background-color: var(--background-color-sections); /* Use section background for card effect */
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--box-shadow-md);
    color: var(--theme-primary-white);
}

.settingsContainer h1 {
    /* Global h1 styles for font-family, weight. Specific color/size for this page */
    color: var(--theme-primary-light-blue);
    text-align: center;
    margin-bottom: var(--space-xl);
    font-size: 1.8em;
}

.formGroup {
    margin-bottom: var(--space-lg);
}

.formGroup label {
    /* Global label styles for display, font-weight, margin-bottom */
    color: var(--theme-secondary-steel-gray);
    font-size: 0.95em;
    margin-bottom: var(--space-xs);
}

.formGroup input[type="text"],
.formGroup input[type="email"],
.formGroup input[type="password"] {
    /* Inherits global input styles for width, border, bg-color, color, box-sizing, border-radius */
    padding: var(--space-sm);
    font-size: 1em;
}

.formActions {
    margin-top: var(--space-xl);
    padding-top: var(--space-lg);
    border-top: 1px solid var(--border-color-light); /* Was secondary-steel-gray, changed to lighter for subtle division */
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
}

/* Base for buttons in this form if not using global .btn in TSX */
.buttonBase {
    font-family: var(--font-primary);
    font-weight: 600;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    user-select: none;
    border: 1px solid transparent;
    padding: var(--space-sm) var(--space-lg);
    font-size: 1em; /* Default button size */
    line-height: 1.5;
    border-radius: var(--border-radius-md);
    transition: var(--transition-fast);
}

.saveButton {
    composes: buttonBase;
    color: var(--theme-primary-white);
    background-color: var(--theme-accent-bright-blue);
    border-color: var(--theme-accent-bright-blue);
    font-size: 1.05em; /* Specific size */
}

.saveButton:hover,
.saveButton:focus {
    background-color: #00a6d8; /* Darker accent */
    border-color: #00a6d8;
    color: var(--theme-primary-white);
    outline: 0;
}
.saveButton:focus {
    box-shadow: var(--focus-ring-shadow) rgba(var(--theme-accent-bright-blue-rgb), 0.5);
}

.deleteAccountSection {
    margin-top: var(--space-xxl); /* Approx 2.5rem */
    padding-top: var(--space-lg);
    border-top: 1px dashed var(--theme-secondary-steel-gray);
}

.deleteAccountSection h2 {
    /* Global h2 styles for font-family, weight. Specific color/size */
    color: var(--theme-primary-light-blue); /* Or var(--color-warning) for more alert */
    font-size: 1.3em;
    margin-bottom: var(--space-sm);
}

.deleteAccountSection p {
    font-size: 0.9em;
    color: var(--theme-secondary-steel-gray);
    margin-bottom: var(--space-md);
    line-height: 1.5;
}

.deleteAccountButton {
    composes: buttonBase;
    width: 100%;
    color: var(--color-error-text);
    background-color: var(--color-error); /* Using danger color */
    border-color: var(--color-error);
}

.deleteAccountButton:hover,
.deleteAccountButton:focus {
    background-color: #c82333; /* Darker danger color from index.css */
    border-color: #bd2130;
    color: var(--color-error-text);
    outline: 0;
}
.deleteAccountButton:focus {
    box-shadow: var(--focus-ring-shadow) rgba(220, 53, 69, 0.5); /* RGB for --color-error */
}

.messageArea {
    text-align: center;
    padding: var(--space-sm);
    margin-top: var(--space-md);
    border-radius: var(--border-radius-md);
    font-size: 0.95em;
    border-width: 1px;
    border-style: solid;
}

.successMessage {
    composes: messageArea;
    background-color: var(--background-color-sections); /* Subtle background */
    color: var(--color-success);
    border-color: var(--color-success);
}

.errorMessage {
    composes: messageArea;
    background-color: var(--background-color-sections);
    color: var(--color-error);
    border-color: var(--color-error);
}

/* Fallback for .loadingMessage if it's just text */
.loadingMessage {
    composes: messageArea;
    color: var(--text-color-muted);
    border-color: transparent; /* No border for loading usually */
    background-color: transparent;
}
