/* src/components/MaterialFormModal.module.css */
.modalOverlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.65);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: var(--z-index-popover); /* Needs to be higher than modal if it can appear on top of another modal */
}

.modalContent {
    background: var(--theme-primary-deep-charcoal);
    color: var(--theme-primary-white);
    padding: var(--space-xl);
    border-radius: var(--border-radius-lg);
    border: 1px solid var(--border-color);
    box-shadow: var(--box-shadow-lg);
    width: 90%;
    max-width: 550px;
    display: flex;
    flex-direction: column;
    gap: var(--space-lg);
}

.modalContent h2 {
    /* Uses global h2 styles */
    margin-top: 0;
    margin-bottom: var(--space-md);
    text-align: center;
    font-size: 1.6em;
}

.formField {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
}

.formField label {
    /* Uses global label styles */
    font-size: 0.9em;
}

.formField input[type="text"],
.formField input[type="number"],
.formField textarea,
.formField select {
    /* Inherits most styles from global input/textarea/select in index.css */
    padding: var(--space-sm);
    font-size: 0.95em;
    /* border-radius already var(--border-radius-md) from global */
}

.formField textarea {
    min-height: 80px;
    resize: vertical;
}

.checkboxField {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    /* color: var(--text-color-light); Ensure label text for checkbox is visible */
}

.checkboxField input[type="checkbox"] {
    /* width: auto; */ /* Global input style might handle this if it has width:100% */
    margin-right: var(--space-xs); /* This can be removed if gap on .checkboxField is enough */
    /* accent-color is already var(--theme-primary-light-blue) from global */
}

.formActions {
    display: flex;
    justify-content: flex-end;
    gap: var(--space-md);
    margin-top: var(--space-md);
}

/* Buttons can be refactored to use global .btn classes in TSX */
.formActions button {
    font-family: var(--font-primary);
    font-weight: 600;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    user-select: none;
    border: 1px solid transparent;
    padding: var(--space-sm) var(--space-md);
    font-size: 0.95em;
    line-height: 1.5;
    border-radius: var(--border-radius-md);
    transition: var(--transition-fast);
}

.submitButton {
    /* Extends .formActions button */
    color: var(--theme-primary-white);
    background-color: var(--theme-accent-bright-blue);
    border-color: var(--theme-accent-bright-blue);
}

.submitButton:hover, .submitButton:focus {
    background-color: #00a6d8; /* Darker bright blue */
    border-color: #00a6d8;
    color: var(--theme-primary-white);
    outline: 0;
}
.submitButton:focus {
    box-shadow: var(--focus-ring-shadow) rgba(var(--theme-accent-bright-blue-rgb), 0.5);
}

.cancelButton {
    /* Extends .formActions button */
    color: var(--theme-primary-white);
    background-color: var(--theme-secondary-steel-gray);
    border-color: var(--theme-secondary-steel-gray);
}

.cancelButton:hover, .cancelButton:focus {
    background-color: #8e989f; /* Darker steel gray */
    border-color: #8e989f;
    color: var(--theme-primary-white);
    outline: 0;
}
.cancelButton:focus {
    box-shadow: var(--focus-ring-shadow) rgba(var(--theme-secondary-steel-gray-rgb), 0.5);
}

.errorMessage {
    color: var(--color-error);
    font-size: 0.85em;
    margin-top: calc(-1 * var(--space-sm));
    margin-bottom: var(--space-sm);
}
