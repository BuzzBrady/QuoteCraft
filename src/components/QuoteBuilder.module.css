/* src/components/QuoteBuilder.module.css */
.selectedClientDetailsContainer {
    background-color: var(--background-color-light); /* Slightly different background */
    padding: var(--space-md);
    border-radius: var(--border-radius-md);
    margin-top: var(--space-md);
    margin-bottom: var(--space-md);
    border: 1px solid var(--border-color-light);
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Responsive columns */
    gap: var(--space-sm) var(--space-md); /* Row and column gap */
    align-items: center;
}

.clientDetailItem {
    font-size: 0.9em;
    color: var(--text-color-light);
    word-break: break-word; /* Prevent overflow */
}
.clientDetailItem strong {
    color: var(--text-color-main);
    margin-right: var(--space-xs);
}

.clientDetailAddress {
    grid-column: span 2; /* Make address take more space if possible */
}

.editClientButton {
    /* Styles for the edit button, can also use global utility if it fits */
    /* Example: make it align to one side if needed */
    justify-self: flex-start; /* Aligns button to the start of its grid cell */
    /* max-width: 150px; /* Optional: if you want to constrain its width */
}

/* Adjust grid layout for the edit button on smaller screens if needed */
@media (max-width: 576px) {
    .selectedClientDetailsContainer {
        grid-template-columns: 1fr; /* Stack everything on small screens */
    }
    .clientDetailAddress {
        grid-column: span 1; /* Reset span */
    }
    .editClientButton {
        margin-top: var(--space-sm);
        width: 100%; /* Make button full width on small screens */
    }
}

.wizardStep {
    padding: 20px;
    border: 1px solid #eeeeee1f;
    border-radius: 8px;
    background-color: #8382821b;
    margin-left: auto;
    margin-right: auto;
    max-width: 960px; /* Adjust this to your desired content width */
    margin-bottom: 70px; /* Ensure space above the sticky footer */
                         /* This margin-bottom might need to be on a wrapper *around* the step components
                            if the sticky bar is not absolutely positioned or fixed in a way that
                            prevents content from flowing under it.
                            Given the sticky bar is likely position: sticky or fixed, this should be fine. */
    
}

.wizardStep h3 {
    margin-top: 0;
    color: var(--primary-color); /* Assuming you have CSS variables */
    border-bottom: 2px solid var(--primary-color);
    padding-bottom: 10px;
    margin-bottom: 20px;
}


.quoteBuilderContainer {
    width: 100%; /* Ensure it tries to take full width of its parent */
    padding: 20px 15px; /* Add some horizontal padding so content isn't flush with screen edges */
    box-sizing: border-box; /* Important if you have padding + width: 100% */
}

.title {
    /* Global h1/h2 styles for font-family, weight. Specific color/size */
    color: var(--theme-primary-light-blue);
    text-align: center;
    margin-bottom: var(--space-xl);
    font-size: 2em;
}

.topControls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--space-md);
    margin-bottom: var(--space-lg);
    flex-wrap: wrap;
}

.quoteNameInput input[type="text"] {
    /* Inherits global input styles */
    padding: var(--space-sm) var(--space-md); /* Global default */
    /* border-radius: var(--border-radius-md); from global */
    min-width: 250px;
}

.mainLayout {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-lg);
    margin-bottom: var(--space-xl);
}

@media (min-width: 992px) {
    .mainLayout {
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }
}

.column {
    background-color: var(--background-color-sections);
    padding: var(--space-md);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-md);
}

.sectionTitle {
    /* Could be h3 or h4 semantically */
    font-size: 1.3em;
    color: var(--theme-primary-light-blue);
    margin-bottom: var(--space-md);
    padding-bottom: var(--space-xs);
    border-bottom: 1px solid var(--border-color-light);
}

.summaryBox {
    background-color: var(--background-color-sections);
    padding: var(--space-lg);
    border-radius: var(--border-radius-md);
    border: 1px solid var(--border-color);
    margin-top: var(--space-md);
    color: var(--theme-primary-white);
}

.summaryItem, .summaryTotal {
    display: flex;
    justify-content: space-between;
    padding: var(--space-xs) 0;
}

.summaryTotal {
    font-weight: bold;
    font-size: 1.2em;
    margin-top: var(--space-xs);
    border-top: 1px solid var(--border-color-light);
    padding-top: var(--space-md);
}

.totalPrice {
    color: var(--theme-accent-bright-blue);
}

.actionsContainer {
    display: flex;
    justify-content: flex-end;
    gap: var(--space-md);
    margin-top: var(--space-lg);
    padding-top: var(--space-lg);
    border-top: 1px solid var(--border-color-light);
}

/* Base for buttons in actionsContainer */
.buttonBase {
    font-family: var(--font-primary);
    font-weight: 600;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    user-select: none;
    border: 1px solid transparent;
    padding: var(--space-sm) var(--space-lg);
    font-size: 1em;
    line-height: 1.5;
    border-radius: var(--border-radius-md);
    transition: var(--transition-fast);
}

.actionButton, .saveQuoteButton, .exportQuoteButton {
    composes: buttonBase;
    color: var(--theme-primary-white);
    background-color: var(--theme-primary-light-blue);
    border-color: var(--theme-primary-light-blue);
}

.actionButton:hover, .saveQuoteButton:hover, .exportQuoteButton:hover,
.actionButton:focus, .saveQuoteButton:focus, .exportQuoteButton:focus {
    background-color: var(--theme-accent-bright-blue);
    border-color: var(--theme-accent-bright-blue);
    color: var(--theme-primary-white);
    outline: 0;
}
.actionButton:focus, .saveQuoteButton:focus, .exportQuoteButton:focus {
    box-shadow: var(--focus-ring-shadow) rgba(var(--theme-primary-light-blue-rgb), 0.5);
}

.placeholder {
    color: var(--text-color-muted);
    text-align: center;
    padding: var(--space-xl);
    font-style: italic;
}

.taskSelectorContainer, .materialSelectorContainer, .areaSelectorContainer {
    margin-bottom: var(--space-md);
}
